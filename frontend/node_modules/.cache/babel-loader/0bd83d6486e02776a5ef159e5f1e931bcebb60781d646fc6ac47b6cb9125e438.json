{"ast":null,"code":"var _jsxFileName = \"D:\\\\finique\\\\frontend\\\\src\\\\pages\\\\login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      const data = response.data;\n\n      // Defensive check in case fields are missing\n      if (data && data.email && data.firstName !== undefined && data.balance !== undefined) {\n        Cookies.set('email', data.email);\n        Cookies.set('firstName', data.firstName);\n        Cookies.set('balance', data.balance);\n        navigate('/dashboard');\n      } else {\n        console.error('Incomplete data from server:', data);\n        alert('Login succeeded but user data is incomplete');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Cookies","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","response","post","data","firstName","undefined","balance","set","console","error","alert","_error$response","_error$response$data","className","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/finique/frontend/src/pages/login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const data = response.data;\r\n\r\n      // Defensive check in case fields are missing\r\n      if (data && data.email && data.firstName !== undefined && data.balance !== undefined) {\r\n        Cookies.set('email', data.email);\r\n        Cookies.set('firstName', data.firstName);\r\n        Cookies.set('balance', data.balance);\r\n        navigate('/dashboard');\r\n      } else {\r\n        console.error('Incomplete data from server:', data);\r\n        alert('Login succeeded but user data is incomplete');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      alert(error.response?.data?.error || 'Login failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <p>{error}</p>} {/* Display error if login fails */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,iCAAiC,EAAE;QACnET,KAAK;QACLE;MACF,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAGF,QAAQ,CAACE,IAAI;;MAE1B;MACA,IAAIA,IAAI,IAAIA,IAAI,CAACV,KAAK,IAAIU,IAAI,CAACC,SAAS,KAAKC,SAAS,IAAIF,IAAI,CAACG,OAAO,KAAKD,SAAS,EAAE;QACpFlB,OAAO,CAACoB,GAAG,CAAC,OAAO,EAAEJ,IAAI,CAACV,KAAK,CAAC;QAChCN,OAAO,CAACoB,GAAG,CAAC,WAAW,EAAEJ,IAAI,CAACC,SAAS,CAAC;QACxCjB,OAAO,CAACoB,GAAG,CAAC,SAAS,EAAEJ,IAAI,CAACG,OAAO,CAAC;QACpCT,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLW,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEN,IAAI,CAAC;QACnDO,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA,IAAAE,eAAA,EAAAC,oBAAA;MACdJ,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCC,KAAK,CAAC,EAAAC,eAAA,GAAAF,KAAK,CAACR,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBR,IAAI,cAAAS,oBAAA,uBAApBA,oBAAA,CAAsBH,KAAK,KAAI,cAAc,CAAC;IACtD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKuB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BxB,OAAA;MAAMyB,QAAQ,EAAEjB,YAAa;MAAAgB,QAAA,gBAC3BxB,OAAA;QACE0B,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEzB,KAAM;QACb0B,QAAQ,EAAGpB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnC,OAAA;QACE0B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvB,QAAS;QAChBwB,QAAQ,EAAGpB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnC,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACNhB,KAAK,iBAAInB,OAAA;MAAAwB,QAAA,EAAIL;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACjC,EAAA,CAtDID,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAAsC,EAAA,GAHxBnC,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}