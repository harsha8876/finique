{"ast":null,"code":"var _jsxFileName = \"D:\\\\finique\\\\frontend\\\\src\\\\pages\\\\AccountTransfer\\\\AccountTransfer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AccountTransfer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountTransfer = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Handle transfer logic\n  const handleTransfer = async e => {\n    e.preventDefault();\n\n    // Reset any previous messages or errors\n    setError('');\n    setSuccessMessage('');\n\n    // Convert amount to a number and validate\n    const parsedAmount = parseFloat(amount);\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\n      setError('Amount must be a valid number greater than zero.');\n      return;\n    }\n\n    // Validate recipient\n    if (!recipient) {\n      setError('Please provide the recipient account number.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/transfer/transfer', {\n        method: 'POST',\n        credentials: 'include',\n        // Include cookies for authentication\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: parsedAmount,\n          recipient\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Successfully transferred\n        setSuccessMessage(data.message);\n        setAmount(''); // Clear amount field\n        setRecipient(''); // Clear recipient field\n      } else {\n        // Display any error message from backend\n        setError(data.message || 'Transfer failed. Please try again.');\n      }\n    } catch (err) {\n      // Handle fetch or server errors\n      setError('Error communicating with the server. Please try again later.');\n      console.error('Transfer Error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transfer Funds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTransfer,\n      className: \"transfer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipient Account Number\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount in \\u20B9\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountTransfer, \"m61JlaoozWN+fYPOLW+UG2lGQps=\");\n_c = AccountTransfer;\nexport default AccountTransfer;\nvar _c;\n$RefreshReg$(_c, \"AccountTransfer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AccountTransfer","_s","amount","setAmount","recipient","setRecipient","error","setError","successMessage","setSuccessMessage","handleTransfer","e","preventDefault","parsedAmount","parseFloat","isNaN","response","fetch","method","credentials","headers","body","JSON","stringify","data","json","ok","message","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/finique/frontend/src/pages/AccountTransfer/AccountTransfer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './AccountTransfer.css';\r\n\r\nconst AccountTransfer = () => {\r\n  const [amount, setAmount] = useState('');\r\n  const [recipient, setRecipient] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Handle transfer logic\r\n  const handleTransfer = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Reset any previous messages or errors\r\n    setError('');\r\n    setSuccessMessage('');\r\n\r\n    // Convert amount to a number and validate\r\n    const parsedAmount = parseFloat(amount);\r\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\r\n      setError('Amount must be a valid number greater than zero.');\r\n      return;\r\n    }\r\n\r\n    // Validate recipient\r\n    if (!recipient) {\r\n      setError('Please provide the recipient account number.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/transfer/transfer', {\r\n        method: 'POST',\r\n        credentials: 'include', // Include cookies for authentication\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ amount: parsedAmount, recipient })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Successfully transferred\r\n        setSuccessMessage(data.message);\r\n        setAmount(''); // Clear amount field\r\n        setRecipient(''); // Clear recipient field\r\n      } else {\r\n        // Display any error message from backend\r\n        setError(data.message || 'Transfer failed. Please try again.');\r\n      }\r\n\r\n    } catch (err) {\r\n      // Handle fetch or server errors\r\n      setError('Error communicating with the server. Please try again later.');\r\n      console.error('Transfer Error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"transfer-container\">\r\n      <h2>Transfer Funds</h2>\r\n      \r\n      {/* Display success message */}\r\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n      \r\n      {/* Display error message */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <form onSubmit={handleTransfer} className=\"transfer-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Recipient Account Number\"\r\n          value={recipient}\r\n          onChange={(e) => setRecipient(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount in â‚¹\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Transfer</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountTransfer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}