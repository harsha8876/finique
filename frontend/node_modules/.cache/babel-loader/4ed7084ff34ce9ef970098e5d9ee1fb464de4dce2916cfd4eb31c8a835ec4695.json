{"ast":null,"code":"var _jsxFileName = \"D:\\\\finique\\\\frontend\\\\src\\\\pages\\\\signup\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Signup.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  // States for the form fields\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [govtId, setGovtId] = useState(\"\");\n  const [occupation, setOccupation] = useState(\"\");\n  const [income, setIncome] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [branchId, setBranchId] = useState(\"\"); // State for the selected branch\n  const [branchName, setBranchName] = useState(\"\"); // State for the branch name\n  const [errors, setErrors] = useState({});\n\n  // List of Indian cities to use as branch names\n  const cities = [{\n    id: 1,\n    name: 'Mumbai'\n  }, {\n    id: 2,\n    name: 'Delhi'\n  }, {\n    id: 3,\n    name: 'Bangalore'\n  }, {\n    id: 4,\n    name: 'Chennai'\n  }, {\n    id: 5,\n    name: 'Kolkata'\n  }, {\n    id: 6,\n    name: 'Hyderabad'\n  }, {\n    id: 7,\n    name: 'Pune'\n  }, {\n    id: 8,\n    name: 'Ahmedabad'\n  }, {\n    id: 9,\n    name: 'Surat'\n  }, {\n    id: 10,\n    name: 'Jaipur'\n  }];\n  const validateForm = () => {\n    const newErrors = {};\n    if (!firstName) newErrors.firstName = \"First name is required\";\n    if (!lastName) newErrors.lastName = \"Last name is required\";\n    if (!dob) newErrors.dob = \"Date of birth is required\";\n    if (!email) newErrors.email = \"Email is required\";\n    if (!password) newErrors.password = \"Password is required\";\n    if (password !== confirmPassword) newErrors.confirmPassword = \"Passwords do not match\";\n    if (!branchId) newErrors.branchId = \"Branch selection is required\";\n    return newErrors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/signup', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            firstName,\n            lastName,\n            dob,\n            gender,\n            nationality,\n            phone,\n            email,\n            address,\n            govtId,\n            occupation,\n            income,\n            password,\n            branchId,\n            // Send the selected branch ID in the request body\n            branchName // Send the selected branch name\n          })\n        });\n        if (!response.ok) throw new Error(\"Failed to sign up\");\n        const data = await response.json();\n        console.log(\"Signup successful:\", data);\n\n        // Save user info in cookies (optional, if you plan to use these later)\n        document.cookie = `email=${data.email}; path=/`;\n        document.cookie = `balance=${data.balance}; path=/`;\n        document.cookie = `firstName=${data.firstName}; path=/`;\n\n        // Redirect to dashboard\n        window.location.href = \"/dashboard\";\n      } catch (err) {\n        console.error(\"Signup error:\", err);\n        alert(\"Signup failed: \" + err.message);\n      }\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Please fill in the form below to register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Personal Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"branchId\",\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"branchId\",\n              value: branchId,\n              onChange: e => {\n                const selectedBranchId = e.target.value;\n                setBranchId(selectedBranchId);\n                setBranchName(e.target.options[e.target.selectedIndex].text);\n              },\n              className: errors.branchId ? \"error\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city.id,\n                children: city.name\n              }, city.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), errors.branchId && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.branchId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"3Sim6nUM9UFDsobxm4UrMEfdqps=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","firstName","setFirstName","lastName","setLastName","dob","setDob","gender","setGender","nationality","setNationality","phone","setPhone","email","setEmail","address","setAddress","govtId","setGovtId","occupation","setOccupation","income","setIncome","password","setPassword","confirmPassword","setConfirmPassword","branchId","setBranchId","branchName","setBranchName","errors","setErrors","cities","id","name","validateForm","newErrors","handleSubmit","e","preventDefault","formErrors","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","document","cookie","balance","window","location","href","err","error","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","selectedBranchId","target","options","selectedIndex","text","map","city","_c","$RefreshReg$"],"sources":["D:/finique/frontend/src/pages/signup/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Signup.module.css';\r\n\r\nconst Signup = () => {\r\n  // States for the form fields\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [govtId, setGovtId] = useState(\"\");\r\n  const [occupation, setOccupation] = useState(\"\");\r\n  const [income, setIncome] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [branchId, setBranchId] = useState(\"\"); // State for the selected branch\r\n  const [branchName, setBranchName] = useState(\"\"); // State for the branch name\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // List of Indian cities to use as branch names\r\n  const cities = [\r\n    { id: 1, name: 'Mumbai' },\r\n    { id: 2, name: 'Delhi' },\r\n    { id: 3, name: 'Bangalore' },\r\n    { id: 4, name: 'Chennai' },\r\n    { id: 5, name: 'Kolkata' },\r\n    { id: 6, name: 'Hyderabad' },\r\n    { id: 7, name: 'Pune' },\r\n    { id: 8, name: 'Ahmedabad' },\r\n    { id: 9, name: 'Surat' },\r\n    { id: 10, name: 'Jaipur' }\r\n  ];\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!firstName) newErrors.firstName = \"First name is required\";\r\n    if (!lastName) newErrors.lastName = \"Last name is required\";\r\n    if (!dob) newErrors.dob = \"Date of birth is required\";\r\n    if (!email) newErrors.email = \"Email is required\";\r\n    if (!password) newErrors.password = \"Password is required\";\r\n    if (password !== confirmPassword) newErrors.confirmPassword = \"Passwords do not match\";\r\n    if (!branchId) newErrors.branchId = \"Branch selection is required\";\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formErrors = validateForm();\r\n  \r\n    if (Object.keys(formErrors).length === 0) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/auth/signup', {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            firstName,\r\n            lastName,\r\n            dob,\r\n            gender,\r\n            nationality,\r\n            phone,\r\n            email,\r\n            address,\r\n            govtId,\r\n            occupation,\r\n            income,\r\n            password,\r\n            branchId, // Send the selected branch ID in the request body\r\n            branchName // Send the selected branch name\r\n          })\r\n        });\r\n  \r\n        if (!response.ok) throw new Error(\"Failed to sign up\");\r\n  \r\n        const data = await response.json();\r\n        console.log(\"Signup successful:\", data);\r\n  \r\n        // Save user info in cookies (optional, if you plan to use these later)\r\n        document.cookie = `email=${data.email}; path=/`;\r\n        document.cookie = `balance=${data.balance}; path=/`;\r\n        document.cookie = `firstName=${data.firstName}; path=/`;\r\n  \r\n        // Redirect to dashboard\r\n        window.location.href = \"/dashboard\";\r\n  \r\n      } catch (err) {\r\n        console.error(\"Signup error:\", err);\r\n        alert(\"Signup failed: \" + err.message);\r\n      }\r\n    } else {\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h1>Create an Account</h1>\r\n      <p className=\"subtitle\">Please fill in the form below to register</p>\r\n\r\n      <form onSubmit={handleSubmit} className=\"signup-form\">\r\n        <div className=\"form-section\">\r\n          <h2>Personal Information</h2>\r\n\r\n          {/* ... other fields ... */}\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"branchId\">Branch</label>\r\n              <select\r\n                id=\"branchId\"\r\n                value={branchId}\r\n                onChange={(e) => {\r\n                  const selectedBranchId = e.target.value;\r\n                  setBranchId(selectedBranchId);\r\n                  setBranchName(e.target.options[e.target.selectedIndex].text);\r\n                }}\r\n                className={errors.branchId ? \"error\" : \"\"}\r\n              >\r\n                <option value=\"\">Select Branch</option>\r\n                {cities.map((city) => (\r\n                  <option key={city.id} value={city.id}>\r\n                    {city.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.branchId && <span className=\"error-message\">{errors.branchId}</span>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* ... password fields and submit button ... */}\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}