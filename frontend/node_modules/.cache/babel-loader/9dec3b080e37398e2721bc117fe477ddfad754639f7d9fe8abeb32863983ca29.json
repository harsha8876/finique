{"ast":null,"code":"var _jsxFileName = \"D:\\\\finique\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [displayBalance, setDisplayBalance] = useState(0);\n  const [actualBalance, setActualBalance] = useState(parseFloat(Cookies.get('balance')) || 0);\n  const firstName = Cookies.get('firstName') || \"User\";\n\n  // Function to fetch balance from the server\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('/api/getBalance', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${Cookies.get('token')}` // Assuming token-based authentication\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.balance !== undefined) {\n          setActualBalance(data.balance);\n          Cookies.set('balance', data.balance); // Update the balance in cookies\n        }\n      } else {\n        console.error('Failed to fetch balance');\n      }\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch balance every 5 seconds (or adjust the interval as needed)\n    const intervalId = setInterval(() => {\n      fetchBalance();\n    }, 5000); // Fetch balance every 5 seconds\n\n    // Fetch balance initially\n    fetchBalance();\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n  useEffect(() => {\n    const duration = 2000; // Duration for balance transition\n    const stepTime = 10; // Time interval for each step\n    const step = actualBalance / (duration / stepTime); // Calculate how much to increment the balance by\n\n    const interval = setInterval(() => {\n      setDisplayBalance(prev => {\n        if (prev < actualBalance) {\n          return Math.min(prev + step, actualBalance);\n        } else {\n          clearInterval(interval);\n          return actualBalance;\n        }\n      });\n    }, stepTime);\n    return () => clearInterval(interval); // Cleanup interval\n  }, [actualBalance]); // Only re-run when `actualBalance` changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dashboard-title\",\n        children: [\"Welcome, \", firstName, \" \\uD83D\\uDC4B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-balance\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"balance-amount\",\n          children: [\"\\u20B9\", displayBalance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/recharge\",\n        className: \"dashboard-button recharge-button\",\n        children: \"Recharge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/transfer\",\n        className: \"dashboard-button transfer-button\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/transactions\",\n        className: \"dashboard-button payment-history-button\",\n        children: \"Payment History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"5/GL40h7CIWFyx5pWmOk2cDLl68=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Cookies","jsxDEV","_jsxDEV","Dashboard","_s","displayBalance","setDisplayBalance","actualBalance","setActualBalance","parseFloat","get","firstName","fetchBalance","response","fetch","method","headers","ok","data","json","balance","undefined","set","console","error","intervalId","setInterval","clearInterval","duration","stepTime","step","interval","prev","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","to","_c","$RefreshReg$"],"sources":["D:/finique/frontend/src/pages/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Dashboard = () => {\r\n  const [displayBalance, setDisplayBalance] = useState(0);\r\n  const [actualBalance, setActualBalance] = useState(parseFloat(Cookies.get('balance')) || 0);\r\n  const firstName = Cookies.get('firstName') || \"User\";\r\n\r\n  // Function to fetch balance from the server\r\n  const fetchBalance = async () => {\r\n    try {\r\n      const response = await fetch('/api/getBalance', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${Cookies.get('token')}`  // Assuming token-based authentication\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.balance !== undefined) {\r\n          setActualBalance(data.balance);\r\n          Cookies.set('balance', data.balance);  // Update the balance in cookies\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch balance');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching balance:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch balance every 5 seconds (or adjust the interval as needed)\r\n    const intervalId = setInterval(() => {\r\n      fetchBalance();\r\n    }, 5000);  // Fetch balance every 5 seconds\r\n\r\n    // Fetch balance initially\r\n    fetchBalance();\r\n\r\n    return () => clearInterval(intervalId);  // Cleanup on unmount\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const duration = 2000;  // Duration for balance transition\r\n    const stepTime = 10;    // Time interval for each step\r\n    const step = actualBalance / (duration / stepTime);  // Calculate how much to increment the balance by\r\n\r\n    const interval = setInterval(() => {\r\n      setDisplayBalance(prev => {\r\n        if (prev < actualBalance) {\r\n          return Math.min(prev + step, actualBalance);\r\n        } else {\r\n          clearInterval(interval);\r\n          return actualBalance;\r\n        }\r\n      });\r\n    }, stepTime);\r\n\r\n    return () => clearInterval(interval);  // Cleanup interval\r\n  }, [actualBalance]);  // Only re-run when `actualBalance` changes\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-header\">\r\n        <h2 className=\"dashboard-title\">Welcome, {firstName} ðŸ‘‹</h2>\r\n        <div className=\"dashboard-balance\">\r\n          <p>Balance</p>\r\n          <p className=\"balance-amount\">â‚¹{displayBalance.toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <Link to=\"/recharge\" className=\"dashboard-button recharge-button\">\r\n          Recharge\r\n        </Link>\r\n        <Link to=\"/transfer\" className=\"dashboard-button transfer-button\">\r\n          Transfer\r\n        </Link>\r\n        <Link to=\"/transactions\" className=\"dashboard-button payment-history-button\">\r\n          Payment History\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}